name: Upload and Update Proxy

on:
  workflow_dispatch:
    inputs:
      client_id:
        description: "Client ID"
        required: true

jobs:
  update-proxy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get install -y jq

      - name: Update Proxy File
        env:
          CLIENT_ID: ${{ github.event.inputs.client_id }}
          TOKEN: ${{ secrets.T01 }}
        run: |
          BOT_PROXY="bot_proxy.json"

          # Ensure bot_proxy.json exists
          if [ ! -f "$BOT_PROXY" ]; then
            echo '{
              "client_data_sha": "",
              "last_updated": "",
              "update_log": []
            }' > "$BOT_PROXY"
          fi

          # Generate new SHA
          NEW_SHA=$(git hash-object clients/client_${CLIENT_ID}.json || echo "placeholder_sha")

          # Validate SHA
          if [ -z "$NEW_SHA" ] || [ "$NEW_SHA" == "placeholder_sha" ]; then
            echo "Error: Failed to generate SHA."
            exit 1
          fi

          # Update bot_proxy.json
          UPDATED_CONTENT=$(jq -c \
            --arg sha "$NEW_SHA" \
            --arg date "$(date --iso-8601=seconds)" \
            '.client_data_sha = $sha | .last_updated = $date | .update_log += [$sha]' "$BOT_PROXY")

          # Encode content
          ENCODED_CONTENT=$(echo "$UPDATED_CONTENT" | base64 --wrap=0)
          CURRENT_SHA=$(jq -r '.client_data_sha' "$BOT_PROXY")

          # Send API request
          RESPONSE=$(curl -s -o response.json -w "%{http_code}" \
            -X PUT \
            -H "Authorization: token $TOKEN" \
            -H "Content-Type: application/json" \
            -d '{
              "message": "Update bot_proxy.json",
              "content": "'"$ENCODED_CONTENT"'",
              "sha": "'"$CURRENT_SHA"'",
              "branch": "main"
            }' \
            https://api.github.com/repos/Radilovk/client-data-system/contents/$BOT_PROXY)

          if [ "$RESPONSE" -ne 200 ]; then
            echo "Error: Failed to update bot_proxy.json."
            cat response.json
            exit 1
          else
            echo "bot_proxy.json updated successfully."
          fi
